{"version":3,"sources":["assets/images/card_cover.jpg","assets/images/gold_star.png","assets/alphabet_sounds sync /^/.//.*/.mp3$","assets/alphabet_sounds/a.mp3","assets/alphabet_sounds/b.mp3","assets/alphabet_sounds/c.mp3","assets/alphabet_sounds/d.mp3","assets/alphabet_sounds/e.mp3","assets/alphabet_sounds/f.mp3","assets/alphabet_sounds/g.mp3","assets/alphabet_sounds/h.mp3","assets/alphabet_sounds/i.mp3","assets/alphabet_sounds/j.mp3","assets/alphabet_sounds/k.mp3","assets/alphabet_sounds/l.mp3","assets/alphabet_sounds/m.mp3","assets/alphabet_sounds/n.mp3","assets/alphabet_sounds/o.mp3","assets/alphabet_sounds/p.mp3","assets/alphabet_sounds/qu.mp3","assets/alphabet_sounds/r.mp3","assets/alphabet_sounds/s.mp3","assets/alphabet_sounds/t.mp3","assets/alphabet_sounds/u.mp3","assets/alphabet_sounds/v.mp3","assets/alphabet_sounds/w.mp3","assets/alphabet_sounds/x.mp3","assets/alphabet_sounds/y.mp3","assets/alphabet_sounds/z.mp3","assets/game_sounds/correct.wav","assets/game_sounds/flip.wav","shared.ts","FlipCard.tsx","config.ts","AudioPlayer.ts","CardContainer.tsx","Level.tsx","StackedCards.tsx","Game.tsx","App.tsx","serviceWorker.ts","impl.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","map","./a.mp3","./b.mp3","./c.mp3","./d.mp3","./e.mp3","./f.mp3","./g.mp3","./h.mp3","./i.mp3","./j.mp3","./k.mp3","./l.mp3","./m.mp3","./n.mp3","./o.mp3","./p.mp3","./qu.mp3","./r.mp3","./s.mp3","./t.mp3","./u.mp3","./v.mp3","./w.mp3","./x.mp3","./y.mp3","./z.mp3","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","consonantsReduced","vowels","allSounds","concat","FlipCard","props","content","iOS","test","navigator","userAgent","_iOSDevice","platform","match","isiOS","state","react","className","value","src","cardCoverImg","onClick","clickHandler","config","DELAY","MAX_SOUND_COUNT","AUDIO_KEYS","CORRECT","FLIP","audioPlayer","AudioPlayer","sounds","classCallCheck","this","audioMap","Map","s","Audio","require","set","sound","flipAudio","get","audio","onended","play","catch","r","console","error","cardsFromValues","values","c","CardContainer","_this","possibleConstructorReturn","getPrototypeOf","call","getNextStateForFlip","cardValue","i","cards","indexOf","assert","card","produce","draftState","toggleFlip","clickedCardValue","flippedCards","filter","length","flippedCardValue","setState","toLowerCase","setTimeout","nextState","successHandler","cardValues","playFlip","prevProps","outOfCardsHandler","_this2","FlipCard_FlipCard","key","React","Level","cardsFinishedHandler","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","remainingSounds","cRemove","err","return","onCompletedHandler","maxCardCount","cShuffle","push","toUpperCase","nextProps","CardContainer_CardContainer","onMatchHandler","generateCards","_defaultDiff","_cardWidth","_narrowingAmount","StackedCardConainerStyled","styled","div","_templateObject","children","cssString","n","generateStackingCSS","CARD_STACK_LIMIT","StackedCards","slice","cv","Game","_React$useState","_React$useState2","slicedToArray","level","setLevel","_React$useState3","_React$useState4","matched","setMatched","levelDict","1","2","3","4","stackedCards","stars","goldStarImg","alt","Level_Level","apply","toConsumableArray","StackedCards_StackedCards","App","react_default","a","createElement","Game_Game","Boolean","window","location","hostname","deepCopy","JSON","parse","stringify","Array","prototype","cRandomPop","index","Math","floor","random","result","splice","cRandomChoice","element","cRandomChoiceExcept","except","copy","j","x","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uKCAxC,IAAAC,EAAA,CACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,WAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAA9B,EAAA+B,GAEA,SAAAC,EAAAF,GACA,IAAA9B,EAAAiC,EAAA/B,EAAA4B,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAhC,EAAA4B,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAnC,IAEA2B,EAAAU,QAAAP,EACAlC,EAAAC,QAAA8B,EACAA,EAAAE,GAAA,oBC/CAjC,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kPCClCuC,EAAoB,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEEC,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACnCC,EAAYF,EAAkBG,OAAOF,GCP5B,SAASG,EAASC,GAE7B,IAAIC,EADN,ODQF,WACI,IAAMC,EAAM,mBAAmBC,KAAKC,UAAUC,WACxCC,IAAeF,UAAUG,SAASC,MAAM,oBAC9C,OAAON,GAAOI,ECXZG,IAGAR,EADkB,YAAhBD,EAAMU,MACGC,EAAA,qBAAKC,UAAU,2DACxBD,EAAA,mBAAGC,UAAU,uBAAuBZ,EAAMa,QAIjCF,EAAA,qBAAKC,UAAU,kBAAiBD,EAAA,qBAAKG,IAAKC,OAE/CJ,EAAA,qBAAKC,UAAS,aAAAd,OAAeE,EAAMY,WAAa,KACtDD,EAAA,qBAAKC,UAAS,WAAAd,OAAaE,EAAMU,OAASM,QAAS,kBAAMhB,EAAMiB,aAAajB,EAAMa,SAC/EZ,KAMGU,EAAA,qBAAKC,UAAS,sBAAAd,OAAwBE,EAAMY,WAAa,KAC/DD,EAAA,qBAAKC,UAAS,QAAAd,OAAUE,EAAMU,OAASM,QAAS,kBAAMhB,EAAMiB,aAAajB,EAAMa,SAC7EF,EAAA,qBAAKC,UAAU,gCAA+BD,EAAA,qBAAKG,IAAKC,OACxDJ,EAAA,qBAAKC,UAAU,yEACbD,EAAA,mBAAGC,UAAU,uBAAuBZ,EAAMa,qBClCrCK,EALA,CACXC,MAAO,IACPC,gBAAiB,GCCRC,EAAa,CACtBC,QAAS,WACTC,KAAM,SAqCKC,EADK,eA/BhB,SAAAC,EAAYC,GAAkBjC,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAH,GAAAG,KADtBC,cACqB,EACzBD,KAAKC,SAAW,IAAIC,IAAIJ,EAAOrE,IAAI,SAAA0E,GAAC,MAAI,CAACA,EAAG,IAAIC,MAAMC,MAAQ,KAAAnC,OAA4BiC,EAA7B,cAC7DH,KAAKC,SAASK,IAAIb,EAAWC,QAAS,IAAIU,MAAMC,EAAQ,MACxDL,KAAKC,SAASK,IAAIb,EAAWE,KAAM,IAAIS,MAAMC,EAAQ,2DAEhDE,GACL,IAAMC,EAAYR,KAAKC,SAASQ,IAAIhB,EAAWE,MAC/C,GAAKY,EAGA,CACD,IAAMG,EAAQV,KAAKC,SAASQ,IAAIF,GAC3BG,EAGDF,EAAUG,QAAU,WAAQD,EAAME,OAAOC,MAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAM,yBAA2BF,MAF7FC,QAAQC,MAAM,iCAAmCT,QALrDC,EAAUG,QAAU,KAUxBH,EACKI,OACAC,MAAM,SAACC,GAAD,OAAOC,QAAQC,MAAM,yBAA2BF,kCAE1DP,GACD,IAAMG,EAAQV,KAAKC,SAASQ,IAAIF,GAC3BG,EAGDA,EAAME,OAAOC,MAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAM,yBAA2BF,KAFjEC,QAAQC,MAAM,iCAAmCT,YAMzC,CAAgBtC,GCtBpC,SAASgD,EAAgBC,GACrB,OAAOA,EAAOzF,IAAI,SAAC0F,GAAQ,MAAO,CAAElC,MAAOkC,EAAGrC,MAAO,UAGpCsC,cACjB,SAAAA,EAAYhD,GAA4B,IAAAiD,EAAA,OAAAxD,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAoB,IACpCC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAmC,KAAAnC,OAAA0D,EAAA,EAAA1D,CAAAuD,GAAAI,KAAAxB,KAAM5B,KAoBVqD,oBAAsB,SAACC,GACnB,IAAMC,EAAIN,EAAKvC,MAAM8C,MAAMnG,IAAI,SAAC0F,GAAD,OAAOA,EAAElC,QAAO4C,QAAQH,GACvDX,QAAQe,QAAc,IAAPH,EAAU,0BAEzB,IAAMI,EAAOV,EAAKvC,MAAM8C,MAAMD,GAM9B,OAJkBK,YAAQX,EAAKvC,MAAO,SAAAmD,GAClCA,EAAWL,MAAMD,GAAKN,EAAKa,WAAWH,MA5BNV,EAkCxChC,aAAe,SAAC8C,GACZ,IAAMC,EAAef,EAAKvC,MAAM8C,MAAMS,OAAO,SAAAlB,GAAC,MAAgB,YAAZA,EAAErC,QAEpD,KAAIsD,EAAaE,OAAS,GAK1B,GAFAvB,QAAQe,OAAOM,EAAaE,OAAS,EAAG,2BAEZ,IAAxBF,EAAaE,OAAc,CAE3B,IAAMC,EAAmBH,EAAa,GAAGnD,MACrCsD,IAAqBJ,EACrBd,EAAKmB,SAASnB,EAAKI,oBAAoBc,IAGlCA,EAAiBE,gBAAkBN,EAAiBM,eACzDC,WAAW,WACP,IAAMC,EAAYX,YAAQX,EAAKvC,MAAO,SAAAmD,GAClCA,EAAWL,MAAQP,EAAKvC,MAAM8C,MAAMnG,IAAI,SAAC0F,GACrC,MAAgB,YAAZA,EAAErC,MACK,CAAEG,MAAOkC,EAAElC,MAAOH,MAAO,aAEzBqC,MAKnBE,EAAKjD,MAAMwE,eAAeT,EAAiBM,eAC3CpB,EAAKmB,SAASG,IACfrD,EAAOC,OACV8B,EAAKmB,SAASnB,EAAKI,oBAAoBU,MAIvCO,WAAW,WACP,IAAMC,EAAYX,YAAQX,EAAKvC,MAAO,SAAAmD,GAClCA,EAAWL,MAAQP,EAAKvC,MAAM8C,MAAMnG,IAAI,SAAA0F,GACpC,MAAO,CAAElC,MAAOkC,EAAElC,MAAOH,MAAmB,cAAZqC,EAAErC,MAAwB,YAAc,QAGhFuC,EAAKmB,SAASG,IACfrD,EAAOC,OACV8B,EAAKmB,SAASnB,EAAKI,oBAAoBU,UAK3Cd,EAAKmB,SAASnB,EAAKI,oBAAoBU,KA9E3Cd,EAAKvC,MAAQ,CAAE8C,MAAOX,EAAgBI,EAAKjD,MAAMyE,aAHbxB,0EAS7BU,GACP,MAAmB,cAAfA,EAAKjD,MACEiD,EACe,KAAfA,EAAKjD,OACZc,EAAYkD,SAASf,EAAK9C,MAAMwD,eACzB,CAAExD,MAAO8C,EAAK9C,MAAOH,MAAO,aAGnCc,EAAYkD,WACL,CAAE7D,MAAO8C,EAAK9C,MAAOH,MAAO,gDAmExBiE,GAEa,IADP/C,KAAKlB,MAAM8C,MAAMS,OAAO,SAAAlB,GAAC,MAAgB,cAAZA,EAAErC,QACnCwD,SACTtC,KAAK5B,MAAMyE,aAAeE,EAAUF,WACpC7C,KAAK5B,MAAM4E,kBAAkBhD,KAAK5B,MAAMyE,YAGnC7C,KAAK5B,MAAMyE,WAAWP,OAAS,GACpCtC,KAAKwC,SAAS,CAAEZ,MAAOX,EAAgBjB,KAAK5B,MAAMyE,gDAM9C,IAAAI,EAAAjD,KACZ,OACIjB,EAAA,qBAAKC,UAAU,kBACVgB,KAAKlB,MAAM8C,MAAMnG,IAAI,SAAC0F,GAAD,OAAOpC,EAAA,cAACmE,EAAD,CACzBC,IAAKhC,EAAElC,MACPH,MAAOqC,EAAErC,MACTG,MAAOkC,EAAElC,MACTI,aAAc4D,EAAK5D,yBA3GI+D,aCNtBC,cACjB,SAAAA,EAAYjF,GAAoB,IAAAiD,EAAA,OAAAxD,OAAAkC,EAAA,EAAAlC,CAAAmC,KAAAqD,IAC5BhC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAmC,KAAAnC,OAAA0D,EAAA,EAAA1D,CAAAwF,GAAA7B,KAAAxB,KAAM5B,KAsBVkF,qBAAuB,SAAC1B,GACpB,IAAMe,EAAYX,YAAQX,EAAKvC,MAAO,SAAAmD,GAAc,IAAAsB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAChD,QAAAC,EAAAC,EAAgBhC,EAAhBiC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAuB,KAAZpC,EAAYwC,EAAA1E,MACnBgD,EAAWgC,gBAAgBC,QAAQ/C,IAFS,MAAAgD,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,MAKX,IAArCd,EAAUsB,gBAAgB3B,OAC1BjB,EAAKjD,MAAMiG,qBAEXhD,EAAKmB,SAASG,IA7BlBtB,EAAKvC,MAAQ,CACTmF,gBAAiB7F,EAAM0B,QAJCuB,6EAQlBiD,GAEV,IADA,IAAM1C,EAAkB,GACfD,EAAI,EAAGA,EAAI3B,KAAKlB,MAAMmF,gBAAgB3B,OAAQX,IAAK,CACxD,GAAIA,GAAK2C,EACL,OAAO1C,EAAM2C,WAEjB,IAAMpE,EAAIH,KAAKlB,MAAMmF,gBAAgBtC,GACrCZ,QAAQe,OAAoB,IAAb3B,EAAEmC,OAAc,wCAC/BV,EAAM4C,KAAKrE,EAAEsC,eACbb,EAAM4C,KAAKrE,EAAEsE,eAGjB,OAAO7C,EAAM2C,6DAiBSG,GACnBA,EAAU5E,SAAWE,KAAK5B,MAAM0B,QAC/BE,KAAKwC,SAAS,CAACyB,gBAAiBS,EAAU5E,0CAK9C,OACIf,EAAA,qBAAKC,UAAU,SACXD,EAAA,cAAC4F,EAAD,CACI/B,eAAgB5C,KAAK5B,MAAMwG,eAC3B5B,kBAAmBhD,KAAKsD,qBACxBT,WAAY7C,KAAK6E,cAAcvF,EAAOE,2BAlDvB4D,6KCVnC,IAAM0B,EAAe,EACfC,EAAa,IACbC,EAAmB,EAgBzB,IAAMC,EAA4BC,IAAOC,IAAVC,IAI3B,SAAChH,GAAD,OAjBJ,SAA6BiH,GAG3B,IAFA,IAAIC,EAAY,GACVC,EAAIF,EAAS/C,OACVX,EAAI,EAAGA,GAAK4D,EAAG5D,IACtB2D,GAAS,gCAAApH,OAAoCyD,EAApC,2CAAAzD,OAEF4G,GAAgBS,EAAI5D,GAFlB,oBAAAzD,OAGA6G,EAAaC,EAAmBrD,EAHhC,mCAOX,OAAO2D,EAMWE,CAAoBpH,EAAMiH,YAOxCI,EAAmB,GACV,SAASC,EAAatH,GACnC,OACEW,EAAA,qBAAKC,UAAU,2EACbD,EAAA,qBAAKC,UAAU,2BAA2BZ,EAAMyE,WAAWP,QAC3DvD,EAAA,cAACkG,EAAD,KACG7G,EAAMyE,WAAW8C,OAAOF,GAAkBhK,IAAI,SAACmK,EAAIjE,GAAL,OAC/C5C,EAAA,cAACmE,EAAD,CACAlE,UAAU,eACVmE,IAAG,GAAAjF,OAAKyD,GAALzD,OAAS0H,GACZ3G,MAAO2G,EACP9G,MAAM,UACNO,aAAc,kBAAM,uCCpCb,SAASwG,EAAKzH,GAAmB,IAAA0H,EAClB1C,WAAe,GADG2C,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAiI,EAAA,GACrCG,EADqCF,EAAA,GAC9BG,EAD8BH,EAAA,GAAAI,EAEd/C,WAAyB,IAFXgD,EAAAvI,OAAAmI,EAAA,EAAAnI,CAAAsI,EAAA,GAErCE,EAFqCD,EAAA,GAE5BE,EAF4BF,EAAA,GAGtCG,EAAkC,CACpCC,EAAGzI,EACH0I,EAAG1I,EAAkBwG,WACrBmC,EAAG1I,EACH2I,EAAG1I,EAAUsG,YAEXqC,EAAeP,EAAQ5K,IAAK,SAAC0E,GAAD,SAAAjC,OAAUiC,EAAEsE,eAAZvG,OAA4BiC,EAAEsC,iBAC5D3C,EAASyG,EAAUN,GACnBnG,IACAA,EAAS7B,GAKb,IADA,IAAM4I,EAAQ,GACNlF,EAAI,EAAGA,EAAEsE,EAAOtE,IACpBkF,EAAMrC,KAAKzF,EAAA,qBAAKC,UAAU,OAAOmE,IAAKxB,EAAGzC,IAAK4H,IAAaC,IAAI,eAGnE,OAAQhI,EAAA,qBAAKC,UAAU,QACnBD,EAAA,cAACiI,EAAD,CACIlH,OAAQA,EACR8E,eAAgB,SAAClD,GAEb,OADA9B,EAAYgB,KAAKnB,EAAWC,SACrB4G,EAAWD,EAAQnI,OAAR+I,MAAAZ,EAAOxI,OAAAqJ,EAAA,EAAArJ,CAAW6D,MAExC2C,mBAAoB,kBAAM6B,EAASD,EAAQ,MAE/ClH,EAAA,qBAAKC,UAAU,4CACXD,EAAA,qBAAKC,UAAU,yEACV6H,GAEL9H,EAAA,cAACoI,EAAD,CAActE,WAAY+D,MCzCtC,IAQeQ,EARO,WACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKvI,UAAU,OACbqI,EAAAC,EAAAC,cAACC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShJ,MACvB,iECQC,SAASiJ,EAAYrK,GACxB,OAAOsK,KAAKC,MAAMD,KAAKE,UAAUxK,IAzBrCyK,MAAMC,UAAUC,WAAa,WACzB,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWvI,KAAKsC,QAExCkG,EAASxI,KAAKoI,GAGpB,OAFApI,KAAKyI,OAAOL,EAAO,GAEZI,GAGXP,MAAMC,UAAUQ,cAAgB,WAG5B,OAAO1I,KAFOqI,KAAKC,MAAMD,KAAKE,SAAWvI,KAAKsC,UAKlD2F,MAAMC,UAAUhE,QAAU,SAAayE,GACnC,IAAMP,EAAQpI,KAAK6B,QAAQ8G,GAC3B,OAAIP,GAAS,IACTpI,KAAKyI,OAAOL,EAAO,IACZ,IAQfH,MAAMC,UAAUU,oBAAsB,SAAUC,GAC5C,IAAMC,EAAOjB,EAAS7H,MAD0CuD,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEhE,QAAAC,EAAAC,EAAgBiF,EAAhBhF,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAwB,KAAb9F,EAAakG,EAAA1E,MACpB6J,EAAK5E,QAAQzG,IAH+C,MAAA0G,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAKhE,OAAOqF,EAAKJ,iBAKhBT,MAAMC,UAAU3D,SAAW,WACvB,IAEIwE,EAAGC,EAAGrH,EAFJ2F,EAAIO,EAAS7H,MAGnB,IAAK2B,EAAI2F,EAAEhF,OAAS,EAAGX,EAAI,EAAGA,IAC1BoH,EAAIV,KAAKC,MAAMD,KAAKE,UAAY5G,EAAI,IACpCqH,EAAI1B,EAAE3F,GACN2F,EAAE3F,GAAK2F,EAAEyB,GACTzB,EAAEyB,GAAKC,EAEX,OAAO1B,GCzCX2B,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SFiI3C,kBAAmB7K,WACrBA,UAAU8K,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f02fc090.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_cover.570d8298.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gold_star.675802c8.png\";","var map = {\n\t\"./a.mp3\": 33,\n\t\"./b.mp3\": 34,\n\t\"./c.mp3\": 35,\n\t\"./d.mp3\": 36,\n\t\"./e.mp3\": 37,\n\t\"./f.mp3\": 38,\n\t\"./g.mp3\": 39,\n\t\"./h.mp3\": 40,\n\t\"./i.mp3\": 41,\n\t\"./j.mp3\": 42,\n\t\"./k.mp3\": 43,\n\t\"./l.mp3\": 44,\n\t\"./m.mp3\": 45,\n\t\"./n.mp3\": 46,\n\t\"./o.mp3\": 47,\n\t\"./p.mp3\": 48,\n\t\"./qu.mp3\": 49,\n\t\"./r.mp3\": 50,\n\t\"./s.mp3\": 51,\n\t\"./t.mp3\": 52,\n\t\"./u.mp3\": 53,\n\t\"./v.mp3\": 54,\n\t\"./w.mp3\": 55,\n\t\"./x.mp3\": 56,\n\t\"./y.mp3\": 57,\n\t\"./z.mp3\": 58\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","module.exports = __webpack_public_path__ + \"static/media/a.6a982ea6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/b.7d9cc99e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/c.514272dc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/d.0dd939d2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/e.b01b030b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/f.ead9b443.mp3\";","module.exports = __webpack_public_path__ + \"static/media/g.ec721348.mp3\";","module.exports = __webpack_public_path__ + \"static/media/h.e6edc26c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/i.cbf5104a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/j.1ae32e7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/k.0f6ff48d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/l.6a7fe78b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/m.32ae4da2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/n.a891ea8a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/o.032c0918.mp3\";","module.exports = __webpack_public_path__ + \"static/media/p.9bb92d8a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/qu.513a2d44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/r.4ba8689a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s.c2ccae33.mp3\";","module.exports = __webpack_public_path__ + \"static/media/t.39e8c062.mp3\";","module.exports = __webpack_public_path__ + \"static/media/u.78b4c336.mp3\";","module.exports = __webpack_public_path__ + \"static/media/v.49473e2f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/w.08f6567a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/x.ec6e3bba.mp3\";","module.exports = __webpack_public_path__ + \"static/media/y.e61023f7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/z.4768ec7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correct.ad458e0d.wav\";","module.exports = __webpack_public_path__ + \"static/media/flip.3c6987ff.wav\";","// NOTE: Remove qu\nconst consonantsReduced = [\n    \"b\",\n    \"c\",\n    \"d\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"p\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"z\"\n];\nconst vowels = ['a', 'e', 'i', 'o', 'u', 'y'];\nconst allSounds = consonantsReduced.concat(vowels);\n\nfunction isiOS(){\n    const iOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const _iOSDevice = !!navigator.platform.match(/iPhone|iPod|iPad/);\n    return iOS || _iOSDevice;\n}\nexport {consonantsReduced, vowels, allSounds, isiOS};","import * as React from 'react';\nimport './FlipCard.css';\nimport cardCoverImg from './assets/images/card_cover.jpg'\nimport { isiOS } from './shared';\n\nexport type CardState = '' | 'flipped' | 'invisible';\nexport type Card = {\n  value: string;\n  state: CardState;\n  className?: string;\n}\n\nexport interface IFlipCardProps extends Card {\n  clickHandler: (flippedCard: string) => void;\n}\n\nexport default function FlipCard(props: IFlipCardProps) {\n  if (isiOS()) {\n    let content;\n    if (props.state === 'flipped') {\n      content = (<div className=\"card-ne--back d-flex justify-content-center flex-column\">\n        <p className='display-1 text-dark'>{props.value}</p>\n      </div>);\n    }\n    else {\n      content = (<div className=\"card-ne--front\"><img src={cardCoverImg} /></div>);\n    }\n    return (<div className={`scene-ne  ${props.className || ''}`}>\n      <div className={`card-ne ${props.state}`} onClick={() => props.clickHandler(props.value)} >\n        {content}\n      </div>\n    </div>);\n  } \n  \n  else {\n    return (<div className={`scene scene--card  ${props.className || ''}`}>\n      <div className={`card ${props.state}`} onClick={() => props.clickHandler(props.value)} >\n        <div className=\"card__face card__face--front\"><img src={cardCoverImg} /></div>\n        <div className=\"card__face card__face--back d-flex justify-content-center flex-column\">\n          <p className='display-1 text-dark'>{props.value}</p>\n        </div>\n      </div>\n    </div>);\n  }\n}\n","const config = {\n    DELAY: 1000,\n    MAX_SOUND_COUNT: 4\n}\n\nexport default config;","import { allSounds } from \"./shared\";\n\n// Set-up Audio player\nexport const AUDIO_KEYS = {\n    CORRECT: '_correct',\n    FLIP: '_flip'\n};\n\nclass AudioPlayer {\n    private audioMap: Map<string, HTMLAudioElement>;\n    constructor(sounds: string[]){\n        this.audioMap = new Map(sounds.map(s => [s, new Audio(require(`./assets/alphabet_sounds/${s}.mp3`))]));\n        this.audioMap.set(AUDIO_KEYS.CORRECT, new Audio(require('./assets/game_sounds/correct.wav')));\n        this.audioMap.set(AUDIO_KEYS.FLIP, new Audio(require('./assets/game_sounds/flip.wav')));\n    }\n    playFlip(sound?: string): void {\n        const flipAudio = this.audioMap.get(AUDIO_KEYS.FLIP) as HTMLAudioElement;\n        if (!sound) {\n            flipAudio.onended = null;\n        }\n        else {\n            const audio = this.audioMap.get(sound);\n            if (!audio) {\n                console.error('Could not find audio for key: ' + sound);\n            } else {\n                flipAudio.onended = () => { audio.play().catch(r => console.error('Could not play audio: ' + r)) };\n            }\n        }\n        flipAudio\n            .play()\n            .catch((r) => console.error('Could not play audio: ' + r));\n    }\n    play(sound: string){\n        const audio = this.audioMap.get(sound);\n        if (!audio) {\n            console.error('Could not find audio for key: ' + sound);\n        } else {\n            audio.play().catch(r => console.error('Could not play audio: ' + r));\n        }\n    }\n}\nconst audioPlayer = new AudioPlayer(allSounds);\nexport default audioPlayer;","import * as React from 'react';\nimport './CardContainer.css';\nimport FlipCard, { Card } from './FlipCard';\nimport produce from 'immer';\nimport config from './config';\nimport audioPlayer from './AudioPlayer';\n\nexport interface ICardContainerProps {\n    cardValues: string[],\n    outOfCardsHandler: (cardsUsed: string[]) => void;\n    successHandler: (cardValue: string) => void;\n}\n\nexport interface ICardContainerState {\n    cards: Card[];\n}\n\n\n\nfunction cardsFromValues(values: string[]): Card[] {\n    return values.map((c) => { return { value: c, state: '' } });\n}\n\nexport default class CardContainer extends React.Component<ICardContainerProps, ICardContainerState> {\n    constructor(props: ICardContainerProps) {\n        super(props);\n\n        this.state = { cards: cardsFromValues(this.props.cardValues) };\n    }\n    /**\n     * Toggles the flipped state of a card but leaves invisible cards\n     * @param card \n     */\n    toggleFlip(card: Card): Card {\n        if (card.state === 'invisible') {\n            return card;\n        } else if (card.state === '') {\n            audioPlayer.playFlip(card.value.toLowerCase());\n            return { value: card.value, state: 'flipped' };\n        }\n        else {\n            audioPlayer.playFlip();\n            return { value: card.value, state: '' };\n        }\n    }\n    getNextStateForFlip = (cardValue: string): ICardContainerState => {\n        const i = this.state.cards.map((c) => c.value).indexOf(cardValue);\n        console.assert(i !== -1, 'Could not find element');\n\n        const card = this.state.cards[i];\n        // NOTE: The order of these matters\n        const nextState = produce(this.state, draftState => {\n            draftState.cards[i] = this.toggleFlip(card);\n        });\n\n        return nextState;\n    }\n\n    clickHandler = (clickedCardValue: string) => {\n        const flippedCards = this.state.cards.filter(c => c.state === 'flipped');\n        // Return early if we are in the process of flipped cards\n        if (flippedCards.length > 1) {\n            return;\n        }\n        console.assert(flippedCards.length < 2, 'Too many flipped cards!');\n\n        if (flippedCards.length === 1) {\n            // 1. Trying to unflip flipped card\n            const flippedCardValue = flippedCards[0].value;\n            if (flippedCardValue === clickedCardValue) {\n                this.setState(this.getNextStateForFlip(flippedCardValue));\n            }\n            // 2. Flipped a matching card, briefly show match then remove\n            else if (flippedCardValue.toLowerCase() === clickedCardValue.toLowerCase()) {\n                setTimeout(() => {\n                    const nextState = produce(this.state, draftState => {\n                        draftState.cards = this.state.cards.map((c): Card => {\n                            if (c.state === 'flipped') {\n                                return { value: c.value, state: 'invisible' }\n                            } else {\n                                return c;\n                            }\n                        });\n                    });\n\n                    this.props.successHandler(clickedCardValue.toLowerCase());\n                    this.setState(nextState);\n                }, config.DELAY)\n                this.setState(this.getNextStateForFlip(clickedCardValue));\n            }\n            // 3. Flipped non-matching card, briefly show then unflip both\n            else {\n                setTimeout(() => {\n                    const nextState = produce(this.state, draftState => {\n                        draftState.cards = this.state.cards.map(c => {\n                            return { value: c.value, state: c.state === 'invisible' ? 'invisible' : '' }\n                        });\n                    });\n                    this.setState(nextState);\n                }, config.DELAY)\n                this.setState(this.getNextStateForFlip(clickedCardValue));\n            }\n        }\n        // 4. Flip a given card\n        else {\n            this.setState(this.getNextStateForFlip(clickedCardValue));\n        }\n    }\n\n    componentDidUpdate(prevProps: ICardContainerProps) {\n        const visibleCards = this.state.cards.filter(c => c.state !== 'invisible')\n        if (visibleCards.length === 0) {\n            if (this.props.cardValues === prevProps.cardValues) {\n                this.props.outOfCardsHandler(this.props.cardValues);\n            }\n            // If there are more sounds available, then generate more cards\n            else if (this.props.cardValues.length > 0) {\n                this.setState({ cards: cardsFromValues(this.props.cardValues) });\n            }\n        }\n    }\n\n\n    public render() {\n        return (\n            <div className='card-container'>\n                {this.state.cards.map((c) => <FlipCard\n                    key={c.value}\n                    state={c.state}\n                    value={c.value}\n                    clickHandler={this.clickHandler} />)}\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport CardContainer from './CardContainer';\nimport config from './config';\nimport produce from 'immer';\n\nexport interface ILevelProps {\n    sounds: string[];\n    onCompletedHandler: () => void;\n    onMatchHandler: (cardValue: string) => void;\n}\n\nexport interface ILevelState {\n    remainingSounds: string[];\n}\n\n\n\nexport default class Level extends React.Component<ILevelProps, ILevelState> {\n    constructor(props: ILevelProps) {\n        super(props);\n\n        this.state = {\n            remainingSounds: props.sounds,\n        }\n    }\n\n    generateCards(maxCardCount: number): string[] {\n        const cards: string[] = [];\n        for (let i = 0; i < this.state.remainingSounds.length; i++) {\n            if (i >= maxCardCount) {\n                return cards.cShuffle();\n            }\n            const s = this.state.remainingSounds[i];\n            console.assert(s.length === 1, 'Cannot handle multiple letter sounds');\n            cards.push(s.toLowerCase());\n            cards.push(s.toUpperCase());\n        }\n\n        return cards.cShuffle();\n    }\n\n    cardsFinishedHandler = (cards: string[]) => {\n        const nextState = produce(this.state, draftState => {\n            for (const c of cards) {\n                draftState.remainingSounds.cRemove(c);\n            }\n        });\n        if (nextState.remainingSounds.length === 0) {\n            this.props.onCompletedHandler();\n        } else {\n            this.setState(nextState);\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps: ILevelProps){\n        if(nextProps.sounds !== this.props.sounds){\n            this.setState({remainingSounds: nextProps.sounds});\n        }\n    }\n\n    public render() {\n        return (\n            <div className='level'>\n                <CardContainer\n                    successHandler={this.props.onMatchHandler}\n                    outOfCardsHandler={this.cardsFinishedHandler}\n                    cardValues={this.generateCards(config.MAX_SOUND_COUNT)} />\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport FlipCard from \"./FlipCard\";\nimport './StackedCards.css'\nimport audioPlayer from './AudioPlayer';\n\n// vmin\nconst _defaultDiff = 3;\nconst _cardWidth = 160;\nconst _narrowingAmount = 3;\n\n// TODO: Get rid of styled components\nfunction generateStackingCSS(children: any[]): string {\n  let cssString = '';\n  const n = children.length;\n  for (let i = 1; i <= n; i++) {\n    cssString += `.stacked-card:nth-last-child(${i}) {\n    position: absolute;\n    top: ${_defaultDiff * (n - i)}px;\n    width: ${_cardWidth - _narrowingAmount * i}px;\n    max-width: 200px;\n  }`\n  }\n  return cssString;\n}\nconst StackedCardConainerStyled = styled.div`\n  position: relative;\n  width: 20vmin;\n  height: 25vmin;\n  ${(props: any) => generateStackingCSS(props.children)}\n`;\n\nexport interface IStackedCardsProps {\n  cardValues: string[];\n}\n\nconst CARD_STACK_LIMIT = 10;\nexport default function StackedCards(props: IStackedCardsProps) {\n  return (\n    <div className='stacked-card-container d-flex justify-content-center align-items-center'>\n      <div className='display-3 text-dark m-3'>{props.cardValues.length}</div>\n      <StackedCardConainerStyled>\n        {props.cardValues.slice(-CARD_STACK_LIMIT).map((cv, i) => \n        <FlipCard \n        className='stacked-card'\n        key={`${i}${cv}`} \n        value={cv} \n        state='flipped' \n        clickHandler={() => null}/>\n        )}\n      </StackedCardConainerStyled>\n    </div>\n\n  );\n\n}","import * as React from 'react';\nimport Level from './Level';\nimport {consonantsReduced, vowels, allSounds} from './shared';\nimport audioPlayer, { AUDIO_KEYS } from './AudioPlayer';\nimport StackedCards from './StackedCards';\nimport goldStarImg from './assets/images/gold_star.png';\nimport './Game.css';\n\nexport interface IGameProps {\n}\n\n\nexport default function Game(props: IGameProps) {\n    const [level, setLevel] = React.useState(1);\n    const [matched, setMatched] = React.useState<string[]>([]);\n    const levelDict: Dictionary<string[]> = {\n        1: consonantsReduced,\n        2: consonantsReduced.cShuffle(),\n        3: vowels,\n        4: allSounds.cShuffle()\n    }\n    const stackedCards = matched.map( (s) => `${s.toUpperCase()}${s.toLowerCase()}`);\n    let sounds = levelDict[level];\n    if(!sounds){\n        sounds = allSounds;\n    }\n\n    // TODO: Could move to seperate component...\n    const stars = []\n    for(let i = 1; i<level; i++){\n        stars.push(<img className='star' key={i} src={goldStarImg} alt='gold star'/>);\n    }\n\n    return (<div className='game'>\n        <Level\n            sounds={sounds}\n            onMatchHandler={(cardValue: string) => {\n                audioPlayer.play(AUDIO_KEYS.CORRECT);\n                return setMatched(matched.concat(...cardValue));\n            }}\n            onCompletedHandler={() => setLevel(level + 1)}\n        />\n        <div className='status-bar d-flex justify-content-center'>\n            <div className='stars d-flex flex-wrap justify-content-center align-items-center mr-5'>\n                {stars}\n            </div>\n            <StackedCards cardValues={stackedCards} />\n        </div>\n        \n    </div>)\n}\n\n","import React from 'react';\nimport './App.css';\nimport Game from './Game';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export {}\n\nArray.prototype.cRandomPop = function () {\n    const index = Math.floor(Math.random() * this.length);\n\n    const result = this[index];\n    this.splice(index, 1);\n\n    return result;\n}\n// https://stackoverflow.com/a/43748517\nArray.prototype.cRandomChoice = function () {\n    const index = Math.floor(Math.random() * this.length);\n\n    return this[index];\n}\n\nArray.prototype.cRemove = function <T>(element: T): boolean {\n    const index = this.indexOf(element);\n    if (index > -1) {\n        this.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n\nexport function deepCopy<T>(o: T): T {\n    return JSON.parse(JSON.stringify(o));\n}\nArray.prototype.cRandomChoiceExcept = function (except: any[]): any {\n    const copy = deepCopy(this);\n    for (const e of except) {\n        copy.cRemove(e);\n    }\n    return copy.cRandomChoice();\n}\n/**\n * Shuffles the array without mutation\n */\nArray.prototype.cShuffle = function () {\n    const a = deepCopy(this);\n    // tslint:disable-next-line:one-variable-per-declaration\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './impl';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}